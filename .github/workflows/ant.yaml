name: Arweave Name Token

on: [push]

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Check out repository code

      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: '5.3' # Specify the Lua version you need

      - name: Setup LuaRocks

        uses: leafo/gh-actions-luarocks@v4.3.0

      - name: Install Busted
        run: luarocks install ar-io-ao-0.1-1.rockspec

      - name: Run Busted Tests
        run: busted .

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - run: yarn --frozen-lockfile
      - run: yarn aos:build
      - run: yarn test
  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [unit, integration]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - run: yarn --frozen-lockfile
      - run: yarn aos:build
      - run: yarn aos:publish

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get latest transaction ID from versions.json
        id: get_tx_id
        run: |
          TX_ID=$(jq -r '.txIds | to_entries | sort_by(.key | tonumber) | last | .value' versions.json)
          echo "::set-output name=TX_ID::$TX_ID"

      - name: Create GitHub tag
        env:
          TX_ID: ${{ steps.get_tx_id.outputs.TX_ID }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag -a "$TX_ID" -m "Release version $TX_ID"
          git push origin "$TX_ID"
